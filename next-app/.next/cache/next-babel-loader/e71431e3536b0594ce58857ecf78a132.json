{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\"; //import fetch from 'isomorphic-unfetch';;\n\nimport client from './../components/ApolloClient'; //import clientConfig from '../client-config';\n\nimport Product from '../components/Product';\nimport gql from 'graphql-tag';\nconst PRODUCTS_QUERY = gql`query{\n    products(first:20){\n        nodes {\n          id\n          productId\n          averageRating\n          slug\n          description\n          image {\n            uri\n            title\n            srcSet\n            sourceUrl\n          }\n          name\n          \n          \n        }\n      }\n\n}`;\n/**\r\n * index\r\n * @param {*} props \r\n */\n\nconst Index = props => {\n  console.warn(props);\n  const {\n    products\n  } = props;\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"product-container\"\n  }));\n};\n\nIndex.getInitialProps = async () => {\n  const result = await client.query({\n    query: PRODUCTS_QUERY\n  });\n  return {\n    produtcs: result.data.products.nodes\n  };\n};\n\nexport default Index; // const res = await fetch( `${clientConfig.siteUrl}/getProducts` );\n//  const producsData = await res.json();\n// return {\n//     products:res\n// }","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/aa/nextjs/next-app/pages/index.js"],"names":["Layout","client","Product","gql","PRODUCTS_QUERY","Index","props","console","warn","products","getInitialProps","result","query","produtcs","data","nodes"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,cAAc,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;EAA3B;AAuBA;;;;;AAMA,MAAME,KAAK,GAAKC,KAAF,IAAY;AACxBC,EAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACE,QAAM;AAACG,IAAAA;AAAD,MAAaH,KAAnB;AAEA,SACG,MAAC,MAAD,QACC;AAAK,IAAA,SAAS,EAAC;AAAf,IADD,CADH;AAUH,CAdD;;AAgBAD,KAAK,CAACK,eAAN,GAAwB,YAAY;AAEhC,QAAMC,MAAM,GAAG,MAAMV,MAAM,CAACW,KAAP,CAAc;AAAEA,IAAAA,KAAK,EAACR;AAAR,GAAd,CAArB;AACA,SAAO;AACHS,IAAAA,QAAQ,EAAEF,MAAM,CAACG,IAAP,CAAYL,QAAZ,CAAqBM;AAD5B,GAAP;AAGH,CAND;;AAWA,eAAeV,KAAf,C,CAEA;AACI;AACA;AACA;AACA","sourcesContent":["import Layout from \"../components/Layout\";\r\n//import fetch from 'isomorphic-unfetch';;\r\nimport client from './../components/ApolloClient';\r\n//import clientConfig from '../client-config';\r\nimport Product from '../components/Product';\r\n\r\nimport gql from 'graphql-tag';\r\n\r\nconst PRODUCTS_QUERY = gql`query{\r\n    products(first:20){\r\n        nodes {\r\n          id\r\n          productId\r\n          averageRating\r\n          slug\r\n          description\r\n          image {\r\n            uri\r\n            title\r\n            srcSet\r\n            sourceUrl\r\n          }\r\n          name\r\n          \r\n          \r\n        }\r\n      }\r\n\r\n}`;\r\n\r\n\r\n/**\r\n * index\r\n * @param {*} props \r\n */\r\n\r\n\r\nconst Index = ( props ) =>{\r\n  console.warn(props);\r\n    const {products} = props ;\r\n\r\n    return (\r\n       <Layout>\r\n        <div className=\"product-container\">\r\n        {/* { products.lenght ? (\r\n             products.map( product =><Product key={product.id} product ={product}/>)\r\n         ) : '' } */}\r\n        </div>\r\n       \r\n       </Layout>\r\n    );\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n\r\n    const result = await client.query( { query:PRODUCTS_QUERY})\r\n    return {\r\n        produtcs: result.data.products.nodes\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport default Index;\r\n\r\n// const res = await fetch( `${clientConfig.siteUrl}/getProducts` );\r\n    //  const producsData = await res.json();\r\n    // return {\r\n    //     products:res\r\n    // }"]},"metadata":{},"sourceType":"module"}