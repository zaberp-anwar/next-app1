{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./client-config.js","webpack:///./components/ApolloClient.js","webpack:///./components/Header.js","webpack:///./components/Layout.js","webpack:///./components/Nav.js","webpack:///./components/Product.js","webpack:///./pages/index.js","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link-http\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/head\"","webpack:///external \"node-fetch\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const clientConfig = {\r\n   // siteUrl:'http://anwarexpo.com/shop2/'\r\n   siteUrl:'http://anwarexpo.com/shop2/',\r\n   graphlUrl:'http://anwarexpo.com/shop2/graphql',\r\n};\r\n\r\nexport default clientConfig;","\r\nimport fetch  from 'node-fetch';\r\n\r\nimport{ApolloClient} from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { createHttpLink} from 'apollo-link-http';\r\n\r\n//import { HttpLink } from 'apollo-link-http';\r\nimport clientConfig from './../client-config';\r\n\r\nconst client  = new ApolloClient ( {\r\n        link:createHttpLink(  {\r\n        url: clientConfig.graphlUrl,\r\n        fetch:fetch\r\n    } ),\r\n    cache: new InMemoryCache()\r\n   \r\n});\r\nexport default client;\r\n","import Nav from \"./Nav\"\r\n\r\nconst Header = () => {\r\n        return(\r\n            <div>\r\n            <Nav/>\r\n            </div>\r\n        )\r\n}\r\nexport default Header;","import Head from 'next/head';\r\nimport Header from './Header';\r\nimport '../styles/style.css';\r\nconst Layout = (props) =>{\r\n    return (\r\n        <div>\r\n            <head>\r\n                <title>woocommerce </title>\r\n                <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/flatly/bootstrap.min.css\"/>\r\n            </head>\r\n            <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","const Nav = () =>{\r\n    return (\r\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n       \r\n        <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n                <a class=\"nav-link\" href=\"#\">Woonext <span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Category</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">My Account</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n            </ul>\r\n            \r\n        </div>\r\n        </nav>\r\n    )\r\n} \r\nexport default Nav;","const Product = (props) => {\r\n    const {product } = props;\r\n    return (\r\n      \r\n            <div class=\"card mb-3\" >\r\n                 <h3 class=\"card-header\">{product.name}</h3>\r\n                <div class=\"card-body\">\r\n                    \r\n                <img  src={product.images[0].sourceUrl} alt=\"Card image\"/>\r\n               \r\n                    <h6 class=\"card-subtitle text-muted\">{product.price}</h6>\r\n                    <a href=\"\" className=\"btn btn-secondary\"> View</a>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Product;","import Layout from \"../components/Layout\";\r\n//import fetch from 'isomorphic-unfetch';;\r\nimport client from './../components/ApolloClient';\r\n//import clientConfig from '../client-config';\r\nimport Product from '../components/Product';\r\n\r\nimport gql from 'graphql-tag';\r\n\r\nconst PRODUCTS_QUERY = gql`query{\r\n    products(first:20){\r\n        nodes {\r\n          id\r\n          productId\r\n          averageRating\r\n          slug\r\n          description\r\n          image {\r\n            uri\r\n            title\r\n            srcSet\r\n            sourceUrl\r\n          }\r\n          name\r\n          \r\n          \r\n        }\r\n      }\r\n\r\n}`;\r\n\r\n\r\n/**\r\n * index\r\n * @param {*} props \r\n */\r\n\r\n\r\nconst Index = ( props ) =>{\r\n  \r\n    const {products} = props ;\r\n\r\n    return (\r\n       <Layout>\r\n        <div className=\"product-container\">\r\n        { products.lenght ? (\r\n             products.map( product =><Product key={product.id} product ={product}/>)\r\n         ) : '' }\r\n        </div>\r\n       \r\n       </Layout>\r\n    );\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n\r\n    const result = await client.query( { query:PRODUCTS_QUERY})\r\n    return {\r\n        produtcs: result.data.products.nodes\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport default Index;\r\n\r\n// const res = await fetch( `${clientConfig.siteUrl}/getProducts` );\r\n    //  const producsData = await res.json();\r\n    // return {\r\n    //     products:res\r\n    // }","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/head\");","module.exports = require(\"node-fetch\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAQA;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAAA;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;AAAA;AAuBA;;;;;AAMA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAIA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}